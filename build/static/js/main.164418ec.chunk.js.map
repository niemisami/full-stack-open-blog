{"version":3,"sources":["constants.js","reducers/authReducer.js","reducers/blogReducer.js","reducers/userReducer.js","reducers/notificationReducer.js","reducers/commentReducer.js","store.js","services/login.js","services/storage.js","actions/notificationActions.js","actions/authActions.js","components/Header.js","components/LoginForm.js","components/Notification.js","components/BlogListItem.js","services/blogs.js","actions/blogActions.js","components/BlogList.js","components/BlogForm.js","services/comments.js","components/CommentList.js","actions/commentActions.js","components/CommentForm.js","components/Blog.js","components/UserListItem.js","services/users.js","components/UserList.js","actions/userActions.js","components/User.js","App.js","index.js"],"names":["notificationTypes","actions","initialState","token","name","username","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","data","concat","filter","blog","id","show","message","notificationType","_Object$entries$","slicedToArray","entries","key","newComment","defineProperty","combineReducers","auth","authReducer","blogs","blogReducer","users","userReducer","notification","notificationReducer","comments","commentReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","services_login","login","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","credentials","response","wrap","_context","prev","next","axios","post","sent","abrupt","stop","this","_x","apply","storage","value","window","localStorage","setItem","JSON","stringify","getItem","removeItem","notifyWith","seconds","dispatch","showNotification","setTimeout","clearNotification","logout","_ref2","_callee2","_context2","storageService","_x2","Nav","react_default","createElement","NavLink","exact","to","mapDispatchToProps","connect","user","Link","className","Header_Nav","onClick","tag","loginService","t0","console","error","onSubmit","event","preventDefault","target","password","htmlFor","color","styles","border","padding","style","borderBottom","BlogListItem","props","title","author","PureComponent","services_blogs","getAll","config","headers","Authorization","get","createNew","_x3","update","_ref3","_callee3","_context3","put","_x4","_x5","remove","_ref4","_callee4","_context4","delete","_x6","_x7","getState","newBlog","blogService","BlogList","componentDidMount","_this","fetchAll","Fragment","map","components_BlogListItem","sortByLikes","sort","blogA","blogB","likes","BlogForm","url","create","generateUrl","services_comments","comment","CommentList","componentDidUpdate","prevProps","content","commentService","CommentForm","placeholder","addLike","_ref5","_callee5","blogWithNewLike","_context5","_x9","addComment","_ref6","_callee6","blogWithComment","_context6","_x10","_x8","blogId","find","showRemove","rel","href","components_CommentList","components_CommentForm","UserListItem","services_users","UserList","components_UserListItem","userService","sortByMostBlogs","userA","userB","userId","_id","App","checkAuth","handleLogOut","components_Notification","components_LoginForm","BrowserRouter","components_Header","Route","path","component","render","match","components_Blog","params","components_User","React","Component","userJson","parse","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.164418ec.chunk.js","sourcesContent":["export const notificationTypes = {\n  NORMAL: 0,\n  ERROR: 1\n}\n\nexport const actions = {\n  BLOGS_FETCH: 'BLOGS_FETCH',\n  BLOG_CREATE: 'BLOG_CREATE',\n  BLOG_UPDATE: 'BLOG_UPDATE',\n  BLOG_DELETE: 'BLOG_DELETE',\n  USERS_FETCH: 'USERS_FETCH',\n  COMMENTS_FETCH: 'COMMENTS_FETCH',\n  COMMENT_CREATE: 'COMMENT_CREATE',\n  AUTH_LOGIN: '  AUTH_LOGIN',\n  AUTH_LOGOUT: '  AUTH_LOGOUT',\n  NOTIFICATION_SHOW: 'NOTIFICATION_SHOW',\n  NOTIFICATION_CLEAR: '  NOTIFICATION_CLEAR'\n}","import { actions } from '../constants'\n\nconst initialState = {\n  token: null,\n  name: null,\n  username: null\n}\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case actions.AUTH_LOGIN:\n      return {\n        ...state,\n        ...action.data\n      }\n    case actions.AUTH_LOGOUT:\n      return initialState\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { actions } from '../constants'\n\nconst reducer = (state = [], action) => {\n  switch(action.type) {\n    case actions.BLOGS_FETCH:\n      return action.data\n\n    case actions.BLOG_CREATE:\n      return state.concat(action.data)\n\n    case actions.BLOG_UPDATE:\n      return state.filter(blog => blog.id !== action.data.id)\n        .concat(action.data)\n\n    case actions.BLOG_DELETE:\n      return state.filter(blog => blog.id !== action.data.id)\n      \n    default:\n      return state\n  }\n}\n\nexport default reducer","import { actions } from '../constants'\n\nconst reducer = (state = [], action) => {\n  switch(action.type) {\n  case actions.USERS_FETCH:\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport default reducer","import { actions } from '../constants'\n\nconst initialState = {\n  show: false,\n  message: null,\n  notificationType: null\n}\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case actions.NOTIFICATION_SHOW:\n      return {\n        ...action.data,\n        show: true\n      }\n\n    case actions.NOTIFICATION_CLEAR:\n      return initialState\n\n    default:\n      return state\n  }\n}\n\nexport default reducer","import { actions } from '../constants'\n\nconst reducer = (state = {}, action) => {\n  switch(action.type) {\n    case actions.COMMENTS_FETCH:\n      return action.data\n\n    case actions.COMMENT_CREATE:\n      // Comments returned as object where key is id of blog\n      /* eslint-disable-next-line */\n      const [key, newComment] = Object.entries(action.data)[0]\n      return {\n        ...state,\n        [key]: state[key].concat(newComment)\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'\nimport authReducer from './reducers/authReducer'\nimport blogReducer from './reducers/blogReducer'\nimport userReducer from './reducers/userReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport commentReducer from './reducers/commentReducer'\n\n\nconst reducer = combineReducers({\n  auth: authReducer,\n  blogs: blogReducer,\n  users: userReducer,\n  notification: notificationReducer,\n  comments: commentReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async(credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n} \n\nexport default { login }","const setItem = (key, value) => window.localStorage.setItem(key, JSON.stringify(value))\nconst getItem = key => window.localStorage.getItem(key)\nconst removeItem = key => window.localStorage.removeItem(key)\n\nexport default {\n  setItem,\n  getItem,\n  removeItem\n}","import { actions } from '../constants'\n\nexport const notifyWith = (message, notificationType, seconds = 5) => async dispatch => {\n  dispatch(showNotification(message, notificationType))\n  setTimeout(() => {\n    dispatch(clearNotification())\n  }, seconds * 1000)\n}\n\nexport const showNotification = (message, notificationType) => ({\n  type: actions.NOTIFICATION_SHOW,\n  data: {\n    message,\n    notificationType\n  }\n})\n\nexport const clearNotification = () => ({\n  type: actions.NOTIFICATION_CLEAR\n})","import loginService from '../services/login'\nimport storageService from '../services/storage'\nimport { notifyWith } from './notificationActions'\nimport { actions, notificationTypes } from '../constants'\n\nexport const login = credentials => async dispatch => {\n  try {\n    const user = await loginService.login(credentials)\n    dispatch({ type: actions.AUTH_LOGIN, data: user })\n    storageService.setItem('user', user)\n    dispatch(notifyWith(`${user.name} successfully logged in`, notificationTypes.NORMAL))\n  } catch(error) {\n    console.error(error)\n    dispatch(notifyWith(`Could not log in`, notificationTypes.ERROR))\n    storageService.removeItem('user')\n  }\n}\n\nexport const logout = () => async dispatch => {\n  dispatch({ type: actions.AUTH_LOGOUT })\n  storageService.removeItem('user')\n  dispatch(notifyWith(`Successfully logged out`, notificationTypes.NORMAL))\n}\n\nexport const checkAuth = () => dispatch => {\n  const userJson = storageService.getItem('user')\n  if(userJson) {\n    const user = JSON.parse(userJson)\n    dispatch({ type: actions.AUTH_LOGIN, data: user })\n  }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { connect } from 'react-redux'\nimport { Link, NavLink } from 'react-router-dom'\nimport { logout } from '../actions/authActions'\n\nconst Header = ({ user }) => {\n  return (\n    <div>\n      <Link to='/'>\n        <h1 className='header'>\n          BLOG APP\n      </h1>\n      </Link>\n      <Nav />\n      <p>{`${user.name} logged in`} <button onClick={logout}>Log out</button></p>\n      <p>\n        <Link to='/blogs/new' tag='button' >Create new blog</Link>\n      </p>\n    </div>\n  )\n}\n\nconst Nav = () => (\n  <div >\n    <NavLink exact to='/'>Blogs</NavLink>&nbsp;\n    <NavLink to='/users'>Users</NavLink>&nbsp;\n  </div>\n)\n\nHeader.propTypes = {\n  user: PropTypes.object\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth\n})\n\n\nconst mapDispatchToProps = ({\n  logout\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { login } from '../actions/authActions'\n\nconst LoginForm = ({ login }) => {\n  const handleLoginFormSubmit = event => {\n    event.preventDefault()\n    const user = {\n      username: event.target.username.value,\n      password: event.target.password.value\n    }\n    login(user)\n    event.target.username.value = ''\n    event.target.password.value = ''\n  }\n  return (\n    <div>\n      <h1 className='header'>Log in to application</h1>\n      <form onSubmit={handleLoginFormSubmit}>\n        <div>\n          <label htmlFor='username' >Name: </label>\n          <input\n            name='username' />\n        </div>\n        <div>\n          <label htmlFor='password' >Password: </label>\n          <input\n            name='password' />\n        </div>\n        <button type=\"submit\">Log in</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes ={\n  login: PropTypes.func.isRequired\n}\n\nconst mapDispatchToProps = ({\n  login\n})\n\nexport default connect(null, mapDispatchToProps)(LoginForm)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { notificationTypes } from '../constants'\n\nconst generateStyle = color => ({\n  border: `1px solid ${color}`,\n  padding: '1rem',\n  color\n})\n\nconst Notification = ({ message, show, notificationType }) => {\n  if(!show) {\n    return null\n  }\n  const styles = generateStyle(notificationType === notificationTypes.NORMAL ? '#388e3c' : '#d32f2f')\n  const className = notificationType === notificationTypes.NORMAL ? 'normal' : 'error'\n  return (\n    <div style={styles} className={className}>\n      {message}\n    </div>\n  )\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n  show: PropTypes.bool,\n  notificationType: PropTypes.number\n}\n\nconst mapStateToProps = ({ notification }) => ({\n  message: notification.message,\n  notificationType: notification.notificationType,\n  show: notification.show\n})\n\nexport default connect(mapStateToProps)(Notification)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst style = {\n  padding: '1rem',\n  borderBottom: '1px solid black'\n}\n\nclass BlogListItem extends PureComponent {\n  render() {\n    const { blog } = this.props\n    return <div className='blog-wrapper' onClick={this.onClick} style={style} >\n       <Link to={`/blogs/${blog.id}`}>\n        {blog.title} {blog.author}\n      </Link>\n    </div >\n  }\n}\n\nBlogListItem.propTypes = {\n  blog: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    likes: PropTypes.number.isRequired,\n    user: PropTypes.shape({\n      name: PropTypes.string.isRequired\n    })\n  })\n}\n\nexport default BlogListItem","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nconst getAll = async token => {\n  const config = {\n    headers: { 'Authorization': `bearer ${token}` }\n  }\n  const response = await axios.get(baseUrl, config)\n  return response.data\n}\n\nconst createNew = async(blog, token) => {\n  const config = {\n    headers: { 'Authorization': `bearer ${token}` }\n  }\n  const response = await axios.post(baseUrl, blog, config)\n  return response.data\n}\n\nconst update = async(blog, token) => {\n  const config = {\n    headers: { 'Authorization': `bearer ${token}` }\n  }\n  const response = await axios.put(`${baseUrl}/${blog.id}`, blog, config)\n  return response.data\n}\n\nconst remove = async(blog, token) => {\n  const config = {\n    headers: { 'Authorization': `bearer ${token}` }\n  }\n  const response = await axios.delete(`${baseUrl}/${blog.id}`, config)\n  return response.data\n}\n\nexport default { getAll, createNew, update, remove }","import blogService from '../services/blogs'\nimport { notifyWith } from './notificationActions'\nimport { actions, notificationTypes } from '../constants'\n\nexport const fetchAll = () => async(dispatch, getState) => {\n  try {\n    const token = getState().auth.token\n    const blogs = await blogService.getAll(token)\n    dispatch({ type: actions.BLOGS_FETCH, data: blogs })\n  } catch(error) {\n    console.error(error)\n    dispatch(notifyWith(`Error fetching blogs`, notificationTypes.ERROR))\n  }\n}\n\nexport const create = blog => async(dispatch, getState) => {\n  try {\n    const token = getState().auth.token\n    const newBlog = await blogService.createNew(blog, token)\n    dispatch(notifyWith(`New blog ${newBlog.title} created`, notificationTypes.NORMAL))\n    dispatch({ type: actions.BLOG_CREATE, data: newBlog })\n  } catch(error) {\n    console.error(error)\n    dispatch(notifyWith(`Error creating blog ${blog.title}`, notificationTypes.ERROR))\n  }\n}\n\nexport const update = (blog, message) => async(dispatch, getState) => {\n  try {\n    const token = getState().auth.token\n    const newBlog = await blogService.update(blog, token)\n    dispatch(notifyWith(message || `New blog ${newBlog.title} created`, notificationTypes.NORMAL))\n    dispatch({ type: actions.BLOG_UPDATE, data: newBlog })\n  } catch(error) {\n    console.error(error)\n    dispatch(notifyWith(`Error updating blog ${blog.title}`, notificationTypes.ERROR))\n  }\n}\n\nexport const remove = blog => async(dispatch, getState) => {\n  try {\n    const token = getState().auth.token\n    await blogService.remove(blog, token)\n    dispatch(notifyWith(`Blog ${blog.title} removed`, notificationTypes.NORMAL))\n    dispatch({ type: actions.BLOG_DELETE, data: blog })\n  } catch(error) {\n    console.error(error)\n    dispatch(notifyWith(`Error removing blog ${blog.title}`, notificationTypes.ERROR))\n  }\n}\n\nexport const addLike = blog => async(dispatch) => {\n  try {\n    const blogWithNewLike = {\n      ...blog,\n      likes: blog.likes + 1\n    }\n    dispatch(update(blogWithNewLike, `Like added to ${blog.title}`))\n  } catch(error) {\n    console.error(error)\n    dispatch(notifyWith(`Error adding like to a blog ${blog.title}`, notificationTypes.ERROR))\n  }\n}\n\nexport const addComment = (blog, comment) => async(dispatch) => {\n  try {\n    if(!comment.length) {\n      return dispatch(notifyWith(`Please write some comment first`, notificationTypes.ERROR))\n    }\n    const blogWithComment = {\n      ...blog,\n      comments: blog.comments.concat(comment)\n    }\n    dispatch(update(blogWithComment, `Comment ${comment} added to ${blog.title}`))\n  } catch(error) {\n    console.error(error)\n    dispatch(notifyWith(`Error adding comment to a blog ${blog.title}`, notificationTypes.ERROR))\n  }\n}","\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport BlogListItem from './BlogListItem'\nimport { fetchAll } from '../actions/blogActions'\n\nclass BlogList extends PureComponent {\n  componentDidMount = () => {\n    this.props.fetchAll()\n  }\n\n  render() {\n    const { blogs } = this.props\n    return <>\n      <h2>Blogs</h2>\n      {blogs.map(blog =>\n        <BlogListItem key={blog.id} blog={blog} />\n      )}\n    </>\n  }\n\n  static propTypes = {\n    blogs: PropTypes.arrayOf(PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      likes: PropTypes.number.isRequired,\n      user: PropTypes.shape({\n        name: PropTypes.string.isRequired\n      })\n    }))\n  }\n  static propTypes = {\n    blogs: PropTypes.array.isRequired,\n    fetchAll: PropTypes.func.isRequired\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  blogs: sortByLikes(state.blogs)\n})\n\nconst mapDispatchToProps = {\n  fetchAll\n}\n\nconst sortByLikes = blogs => blogs.sort((blogA, blogB) => blogB.likes - blogA.likes)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogList)\n\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { create } from '../actions/blogActions'\n\nclass BlogForm extends PureComponent {\n  onSubmit = event => {\n    event.preventDefault()\n    const blog = {\n      title: event.target.title.value,\n      author: event.target.author.value,\n      url: event.target.url.value\n    }\n    this.props.create(blog)\n    event.target.title.value = ''\n    event.target.author.value = ''\n    event.target.url.value = ''\n  }\n\n  render() {\n    return <>\n      <h2>Add new blog</h2>\n      <form onSubmit={this.onSubmit}>\n        <div>\n          <label htmlFor='title' >Title: </label>\n          <input\n            name='title' />\n        </div>\n        <div>\n          <label htmlFor='author' >Author: </label>\n          <input\n            name='author'/>\n        </div>\n        <div>\n          <label htmlFor='url' >URL: </label>\n          <input\n            name='url' />\n        </div>\n        <button type=\"submit\">Save</button>\n      </form>\n    </>\n  }\n\n  static propTypes = {\n    create: PropTypes.func.isRequired\n  }\n}\n\nconst mapDispatchToProps = ({\n  create\n})\n\nexport default connect(null, mapDispatchToProps)(BlogForm)\n","import axios from 'axios'\nconst baseUrl = '/api/blogs/'\n\nconst generateUrl = blog => `${baseUrl}/${blog.id}/comments`\n\nconst getAll = async(blog, token) => {\n  const config = {\n    headers: { 'Authorization': `bearer ${token}` }\n  }\n  const response = await axios.get(generateUrl(blog), config)\n  return response.data\n}\n\nconst createNew = async(blog, comment, token) => {\n  const config = {\n    headers: { 'Authorization': `bearer ${token}` }\n  }\n  const response = await axios.post(generateUrl(blog), comment, config)\n  return response.data\n}\n\nexport default { getAll, createNew }","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchAll } from '../actions/commentActions'\n\nclass CommentList extends PureComponent {\n  componentDidMount = () => {\n    this.props.fetchAll()\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if(prevProps.blog.id !== this.props.blog.id) {\n      this.props.fetchAll()\n    }\n  }\n\n  render() {\n    return (<div>\n      <h3>Comments</h3>\n      {this.props.comments.map((comment) =>\n        <li key={comment.id}>{comment.content}</li>)}\n    </div>\n    )\n  }\n}\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n  blog: PropTypes.shape({\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  fetchAll: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state, { blog }) => ({\n  comments: state.comments[blog.id] || []\n})\n\nconst mapDispatchToProps = (dispatch, { blog }) => ({\n  fetchAll: () => dispatch(fetchAll(blog))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentList)\n","import commentService from '../services/comments'\nimport { notifyWith } from './notificationActions'\nimport { actions, notificationTypes } from '../constants'\n\nexport const fetchAll = blog => async(dispatch, getState) => {\n  try {\n    const token = getState().auth.token\n    const comments = await commentService.getAll(blog, token)\n    dispatch({ type: actions.COMMENTS_FETCH, data: comments })\n  } catch(error) {\n    console.error(error)\n    dispatch(notifyWith(`Error fetching comments`, notificationTypes.ERROR))\n  }\n}\n\nexport const create = (blog, comment) => async(dispatch, getState) => {\n  try {\n    const token = getState().auth.token\n    const newComment = await commentService.createNew(blog, comment, token)\n    dispatch(notifyWith(`New comment ${newComment.content} for blog ${blog.title} created`, notificationTypes.NORMAL))\n    dispatch({ type: actions.COMMENT_CREATE, data: newComment })\n  } catch(error) {\n    console.error(error)\n    dispatch(notifyWith(`Error creating comment ${comment.title}`, notificationTypes.ERROR))\n  }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { create } from '../actions/commentActions'\n\nclass CommentForm extends PureComponent {\n  onSubmit = event => {\n    event.preventDefault()\n    const comment = event.target.comment.value\n    this.props.create({ content: comment })\n    event.target.comment.value = ''\n  }\n\n  render() {\n    return <>\n      <form onSubmit={this.onSubmit}>\n        <div>\n          <input name='comment' placeholder='Comment' />\n        </div>\n        <button type=\"submit\">Add</button>\n      </form>\n    </>\n  }\n\n  static propTypes = {\n    create: PropTypes.func.isRequired\n  }\n}\n\nconst mapDispatchToProps = (dispatch, { blog }) => ({\n  create: comment => dispatch(create(blog, comment))\n})\n\nexport default connect(null, mapDispatchToProps)(CommentForm)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addLike, remove, addComment } from '../actions/blogActions'\nimport CommentList from './CommentList';\nimport CommentForm from './CommentForm';\n\nfunction Blog({ blog, addLike, addComment, remove, showRemove }) {\n  return !blog\n    ? <p>Blog not found</p>\n    : (\n      <div>\n        <h1>{blog.title}</h1>\n        <a target='_blank'\n          rel='noopener noreferrer'\n          href={blog.url}>Read the blog</a>\n\n        <div className='blog-details'>\n          {blog.likes} likes <button onClick={() => addLike(blog)}>Like</button>\n          {blog.user && `Added by ${blog.user.name}`}<br />\n        </div>\n        {showRemove &&\n          <button\n            className='remove-button'\n            onClick={() => remove(blog)}>Remove</button>\n        }\n        <CommentList blog={blog} />\n        <CommentForm blog={blog} />\n      </div>\n    )\n}\n\nBlog.propTypes = {\n  blog: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    likes: PropTypes.number.isRequired,\n    user: PropTypes.object\n  }),\n  addLike: PropTypes.func.isRequired,\n  addComment: PropTypes.func.isRequired,\n  remove: PropTypes.func.isRequired,\n  showRemove: PropTypes.bool\n}\n\nconst mapStateToProps = (state, { blogId }) => {\n  const blog = state.blogs.find(blog => blog.id === blogId)\n  const username = state.auth.username\n  const showRemove = blog && blog.user && blog.user.username === username\n  return {\n    blog,\n    showRemove\n  }\n}\n\n\nconst mapDispatchToProps = {\n  addLike,\n  addComment,\n  remove\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Blog)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst style = {\n  padding: '1rem',\n  borderBottom: '1px solid black'\n}\n\nclass UserListItem extends PureComponent {\n  \n  render() {\n    const { user } = this.props\n    return <div className='user-wrapper' onClick={this.onClick} style={style} >\n      <Link to={`/users/${user.id}`}>\n        {user.name} {user.blogs.length}\n      </Link>\n    </div >\n  }\n}\n\nUserListItem.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    blogs: PropTypes.array.isRequired\n  })\n}\n\nexport default UserListItem","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = async token => {\n  const config = {\n    headers: { 'Authorization': `bearer ${token}` }\n  }\n  const response = await axios.get(baseUrl, config)\n  return response.data\n}\n\nexport default { getAll }","\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport UserListItem from './UserListItem'\nimport { fetchAll } from '../actions/userActions'\n\nclass UserList extends PureComponent {\n  componentDidMount = () => {\n    this.props.fetchAll()\n  }\n\n  render() {\n    const { users } = this.props\n    return <>\n      <h2>Users</h2>\n      {users.map(user =>\n        <UserListItem key={user.id} user={user} />\n      )}\n    </>\n  }\n\n  static propTypes = {\n    users: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string.isRequired\n    }))\n  }\n  static propTypes = {\n    users: PropTypes.array.isRequired,\n    fetchAll: PropTypes.func.isRequired\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  users: sortByMostBlogs(state.users)\n})\n\nconst mapDispatchToProps = {\n  fetchAll\n}\n\nconst sortByMostBlogs = users => users.sort((userA, userB) => userB.blogs.length - userA.blogs.length)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList)\n\n","import userService from '../services/users'\nimport { notifyWith } from './notificationActions'\nimport { actions, notificationTypes } from '../constants'\n\nexport const fetchAll = () => async(dispatch, getState) => {\n  try {\n    const token = getState().auth.token\n    const users = await userService.getAll(token)\n    dispatch({ type: actions.USERS_FETCH, data: users })\n  } catch(error) {\n    console.error(error)\n    dispatch(notifyWith(`Error fetching users`, notificationTypes.ERROR))\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nfunction User({ user }) {\n  return !user\n    ? <p>User not found</p>\n    : (\n      <div>\n        <h1>{user.name}</h1>\n        <h3>Added blogs</h3>\n        <ul>\n          {user.blogs.map(blog => (\n            <li key={blog._id}>{blog.title}</li>\n          ))}\n        </ul>\n\n      </div>\n    )\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n}\n\nconst mapStateToProps = (state, { userId }) => ({\n  user: state.users.find(user => user.id === userId)\n})\n\n\nexport default connect(mapStateToProps)(User)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header';\nimport LoginForm from './components/LoginForm'\nimport Notification from './components/Notification'\nimport BlogList from './components/BlogList'\nimport BlogForm from './components/BlogForm'\nimport Blog from './components/Blog';\nimport UserList from './components/UserList';\nimport User from './components/User';\n\nimport { logout, checkAuth } from './actions/authActions'\nclass App extends React.Component {\n\n  componentDidMount = () => {\n    this.props.checkAuth()\n  }\n\n  handleLogOut = () => {\n    this.props.logout()\n  }\n\n  render() {\n    const { user } = this.props\n    return (\n      <div>\n        <Notification />\n        {user.token == null\n          ? <LoginForm />\n          : <Router>\n            <>\n              <Header />\n              <>\n                <Route path='/' exact component={BlogList} />\n                <Route path='/blogs/new' component={BlogForm} />\n                <Route path='/blogs/:blogId' render={({ match }) => (\n                  <Blog blogId={match.params.blogId} />\n                  )} />\n                  <Route path='/blogs' component={BlogList} />\n                <Route path='/users/:userId' render={({ match }) => (\n                  <User userId={match.params.userId} />\n                  )} />\n                  <Route path='/users' component={UserList} />\n              </>\n            </>\n          </Router>\n        }\n      </div>\n    )\n  }\n  static propTypes = {\n    user: PropTypes.object,\n    logout: PropTypes.func.isRequired,\n    checkAuth: PropTypes.func.isRequired\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.auth\n})\n\nconst mapDispatchToProps = {\n  logout,\n  checkAuth\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'))\n"],"sourceRoot":""}